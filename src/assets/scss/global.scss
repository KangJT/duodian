@mixin wh($width,$height) {
  width: $width;
  height: $height;
}
@mixin border1px($direction:'bottom') {
  position: relative;
  &::after{
    content: '';
    @include wh(200%,1px);
    transform-origin: left top;
    transform:scale(0.5);
    background: $border-color-base;
    position: absolute;
    top: 0;
    left: 0;
  }
}



@mixin pad($x, $y) {
  padding: $x $y;
  box-sizing: border-box;
}

@mixin h-center {
  display: flex;
  align-items: center;
}

@mixin v-center {
  display: flex;
  justify-content: center;
}


@mixin vh-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

//单行隐藏
@mixin ell {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis
}

@mixin flex {
  display: -webkit-box; //旧语法
  display: -webkit-flex; //新语法
  display: flex;
  flex-direction: column;
}


@mixin flexj($ju) {
  justify-content: $ju
}

@mixin bgColor($color) {
  background-color: $color
}

//字体溢出隐藏
@mixin ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: space;
}


//圆角 border-radius
@mixin rounded($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

//盒子阴影 box-shadow
@mixin shadow($x, $y, $blur, $color) {
  -webkit-box-shadow: $x, $y, $blur, $color;
  -moz-box-shadow: $x, $y, $blur, $color;
  box-shadow: $x, $y, $blur, $color;
}

//内置阴影
@mixin shadow-inset($x, $y, $blur, $color) {
  -webkit-box-shadow: inset $x $y $blur $color;
  -moz-box-shadow: inset $x $y $blur $color;
  box-shadow: inset $x $y $blur $color;
}

//动画
@mixin transition($property) {
  -webkit-transition: $property .2s ease;
  -moz-transition: $property .2s ease;
  -o-transition: $property .2s ease;
  transition: $property .2s ease;
}


//图片
@mixin msgimg($imgurl) {
  background: url($imgurl) no-repeat center center/100%;
}


@mixin center($hcenter,$wcenter){
  line-height:$hcenter;
  text-align: $wcenter;
}




@mixin fixedBottom() {
  position: fixed;
  left: 0;
  bottom: 0;
}
@mixin flexs {
  display: -webkit-box; //旧语法
  display: -webkit-flex; //新语法
  display: flex;
  flex-direction: column;
}
@mixin flex ($direction:row, $content:center, $items:center) { // inherit
  display: flex;
  justify-content: $content;
  align-items: $items;
  flex-direction: $direction;
}

@mixin flexTab() {
  width: 100%;
  height: 44px;
  display: flex;
  flex-shrink: 0;
  align-items: center;
  justify-content: space-around;
}

@mixin flexX() {
  display: flex;
  flex-direction: column;
}

@mixin sizing() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin absolute($direction) {
  position: $direction;
}

@mixin height($height) {
  height: $height;
}

@mixin hidden {
  overflow: hidden;
}

// @mixin center($center) {
//   text-align: $center;
// }

@mixin box_flex {
  display: flex;
  /* NEW, Spec - Opera 12.1, Firefox 20+ */
  display: -webkit-flex;
  /* NEW - Chrome */
}

@mixin direction ($dir:row) {
  // 设置弹性盒子方向
  -webkit-flex-direction: $dir;
  flex-direction: $dir;
}

@mixin flexWrap ($wrap) {
  -webkit-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

@mixin flexFlow ($dir:row, $wrap:wrap) {
  // 方向和换行的结合体
  -webkit-flex-flow: $dir $wrap;
  flex-flow: $dir $wrap;
}

@mixin justify ($justify:center) {
  // 水平居中
  -webkit-justify-content: $justify;
  justify-content: $justify;
}

@mixin align ($align:center) {
  // 垂直居中
  -webkit-align-items: $align;
  align-items: $align;
}

@mixin flexOne ($grow: 1, $shrink: 1, $basis: 0%) {
  // 
  -webkit-flex: $grow $shrink $basis;
  flex: $grow $shrink $basis;
}

@mixin flex_grow($val) {
  -webkit-flex-grow: $val;
  flex-grow: $val;
}

@mixin flex_shrink($val) {
  -webkit-flex-shrink: $val;
  flex-shrink: $val;
}

@mixin flex_basis($val) {
  -webkit-flex-basis: $val;
  flex-basis: $val;
}

@mixin setBottomLine($c: #C7C7C7) {
  & {
      position: relative;
  }
  &:before {
      content: " ";
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 1px;
      border-bottom: 1px solid $c;
  }
  [data-dpr="1"] &:before {
      transform-origin: 0 0;
      transform: scaleY(0.5);
  }
}

@mixin setTopLine($c: #C7C7C7) {
  & {
      position: relative;
  }
  &:before {
      content: " ";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 1px;
      border-bottom: 1px solid $c;
  }
  [data-dpr="1"] &:before {
      transform-origin: 0 0;
      transform: scaleY(0.5);
  }
}

@mixin mp() {
  margin: 0;
  padding: 0;
}

@mixin borderT($size) {
  border: $size solid transparent;
}

@mixin oneD() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@mixin twoD($clamp:2) {
  overflow:hidden; 

  text-overflow:ellipsis;

  display:-webkit-box; 

  -webkit-box-orient:vertical;

  -webkit-line-clamp:$clamp; 
}